services:
  rabbitmq:
    image: rabbitmq:3-management
    networks: 
      ["my-network"]
    container_name: rabbitmq
    ports:
      [15672:15672]      
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  calendar:
    image: ${DOCKER_REGISTRY-}calendar-service
    networks: 
      ["my-network"]
    ports:
      [5000:8080,5001:8081]
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: src/CalendarService/Med.Calendar.WebAPI/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq   
      - ASPNETCORE_ENVIRONMENT=Development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  appointment:
    image: ${DOCKER_REGISTRY-}appointment-service
    networks: 
      ["my-network"]
    ports:
      [5002:8080,5003:8081] 
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: src/AppointmentService/Med.Appointment.WebAPI/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_ENVIRONMENT=Development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    
  auth:
    image: ${DOCKER_REGISTRY-}auth-service
    networks: 
      ["my-network"]
    ports:
      [5004:8080,5005:8081]     
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: src/AuthenticationService/Med.Authentication.WebAPI/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_ENVIRONMENT=Development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    
  user:
    image: ${DOCKER_REGISTRY-}user-service
    networks: 
      ["my-network"]
    ports:
      [5006:8080,5007:8081]   
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: src/UserService/Med.User.WebAPI/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_ENVIRONMENT=Development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s    

networks:
  my-network:
    driver: bridge
